<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on TreeBoyLife</title>
    <link>https://treeboylife.com/categories/leetcode/</link>
    <description>Recent content in leetcode on TreeBoyLife</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Apr 2021 20:09:44 +0800</lastBuildDate><atom:link href="https://treeboylife.com/categories/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode_easy_twosum</title>
      <link>https://treeboylife.com/blog/leetcode_easy_twosum/</link>
      <pubDate>Sat, 17 Apr 2021 20:09:44 +0800</pubDate>
      
      <guid>https://treeboylife.com/blog/leetcode_easy_twosum/</guid>
      <description>Two Sum Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
Solution brute-force class Solution { public: vector&amp;lt;int&amp;gt; twoSum(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) { for(int i=0; i &amp;lt; nums.size(); ++i) { int left = target - nums[i]; for(int j=i+1; j &amp;lt; nums.size(); j++) { if(nums[j] == left) { return {i, j}; } } } return {}; } }; hashmap class Solution { public: vector&amp;lt;int&amp;gt; twoSum(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) { unordered_map&amp;lt;int, int&amp;gt; indices; for(int i=0; i &amp;lt; nums.</description>
    </item>
    
  </channel>
</rss>
